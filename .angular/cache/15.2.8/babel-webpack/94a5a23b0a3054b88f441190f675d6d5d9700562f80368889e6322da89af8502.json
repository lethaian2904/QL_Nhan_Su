{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/service/user.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction LoginComponent_div_6_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \" Username is Mandatory \");\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction LoginComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtemplate(1, LoginComponent_div_6_ng_container_1_Template, 2, 0, \"ng-container\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_0_0 = ctx_r0.loginForm.get(\"username\")) == null ? null : tmp_0_0.errors) && ((tmp_0_0 = ctx_r0.loginForm.get(\"username\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]));\n  }\n}\nfunction LoginComponent_div_9_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \" Password is Mandatory \");\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction LoginComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtemplate(1, LoginComponent_div_9_ng_container_1_Template, 2, 0, \"ng-container\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_0_0 = ctx_r1.loginForm.get(\"password\")) == null ? null : tmp_0_0.errors) && ((tmp_0_0 = ctx_r1.loginForm.get(\"password\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]));\n  }\n}\nfunction LoginComponent_p_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r2.message);\n  }\n}\nexport class LoginComponent {\n  constructor(fb, userService, router) {\n    this.fb = fb;\n    this.userService = userService;\n    this.router = router;\n    this.loginForm = this.fb.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n  ngOnInit() {}\n  handleLogin(form) {\n    if (form.valid) {\n      const {\n        username,\n        password\n      } = form.value;\n      this.userService.login().subscribe(userList => {\n        const user = userList.find(user => {\n          console.log(user);\n          if (username === user.username && password === user.password) {\n            this.router.navigateByUrl('home');\n          }\n        });\n        if (!user) {\n          this.loginForm.reset();\n          this.message = 'Username or password incorrect';\n        }\n      });\n    } else {\n      this.loginForm.markAllAsTouched();\n    }\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i3.Router));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 13,\n  vars: 4,\n  consts: [[1, \"container\"], [1, \"login-form\", 3, \"formGroup\", \"ngSubmit\"], [1, \"login-title\"], [1, \"login-group\"], [\"type\", \"text\", \"placeholder\", \"Username\", \"name\", \"email\", \"formControlName\", \"username\"], [\"class\", \"error\", 4, \"ngIf\"], [\"type\", \"password\", \"placeholder\", \"Password\", \"name\", \"psw\", \"formControlName\", \"password\"], [\"type\", \"submit\", 1, \"login-submit\"], [1, \"error\"], [4, \"ngIf\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_1_listener() {\n        return ctx.handleLogin(ctx.loginForm);\n      });\n      i0.ɵɵelementStart(2, \"h2\", 2);\n      i0.ɵɵtext(3, \"\\u0110\\u0103ng nh\\u1EADp\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3);\n      i0.ɵɵelement(5, \"input\", 4);\n      i0.ɵɵtemplate(6, LoginComponent_div_6_Template, 2, 1, \"div\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\", 3);\n      i0.ɵɵelement(8, \"input\", 6);\n      i0.ɵɵtemplate(9, LoginComponent_div_9_Template, 2, 1, \"div\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"button\", 7);\n      i0.ɵɵtext(11, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(12, LoginComponent_p_12_Template, 2, 1, \"p\", 5);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.loginForm.touched || ctx.loginForm.dirty);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.loginForm.touched || ctx.loginForm.dirty);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.message);\n    }\n  },\n  dependencies: [i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\".container[_ngcontent-%COMP%] {   \\r\\n    height: 50vh;\\r\\n    display: flex;\\r\\n    padding: 10px;\\r\\n    margin: 5px;\\r\\n    \\r\\n   \\r\\n}\\r\\n\\r\\n.login-form[_ngcontent-%COMP%] {\\r\\n    border: 1px solid black;\\r\\n    border-radius: 7px;\\r\\n    width: max-content;\\r\\n    padding: 20px;\\r\\n    text-align: center;\\r\\n    position: relative;\\r\\n}\\r\\n\\r\\n.login-group[_ngcontent-%COMP%] {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    align-items: start;\\r\\n    gap: 10px;\\r\\n    margin-bottom: 15px;\\r\\n}\\r\\n\\r\\nlabel[_ngcontent-%COMP%] {\\r\\n    font-family: 'Roboto', sans-serif;\\r\\n    font-weight: 400;\\r\\n    font-size: 14px;\\r\\n}\\r\\n\\r\\nbutton[_ngcontent-%COMP%] {\\r\\n    margin-top: 15px;\\r\\n    padding: 5px 10px;\\r\\n    border-radius: 5px;\\r\\n    background-image: linear-gradient(to right, #FF00CC, #3366FF);\\r\\n    border: none;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.error[_ngcontent-%COMP%] {\\r\\n    font-size: 14px;\\r\\n    color: red;\\r\\n    margin-top: 5px;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFlBQVk7SUFDWixhQUFhO0lBQ2IsYUFBYTtJQUNiLFdBQVc7OztBQUdmOztBQUVBO0lBQ0ksdUJBQXVCO0lBQ3ZCLGtCQUFrQjtJQUNsQixrQkFBa0I7SUFDbEIsYUFBYTtJQUNiLGtCQUFrQjtJQUNsQixrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLGtCQUFrQjtJQUNsQixTQUFTO0lBQ1QsbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0ksaUNBQWlDO0lBQ2pDLGdCQUFnQjtJQUNoQixlQUFlO0FBQ25COztBQUVBO0lBQ0ksZ0JBQWdCO0lBQ2hCLGlCQUFpQjtJQUNqQixrQkFBa0I7SUFDbEIsNkRBQTZEO0lBQzdELFlBQVk7SUFDWixlQUFlO0FBQ25COztBQUVBO0lBQ0ksZUFBZTtJQUNmLFVBQVU7SUFDVixlQUFlO0FBQ25CIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lciB7ICAgXHJcbiAgICBoZWlnaHQ6IDUwdmg7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgcGFkZGluZzogMTBweDtcclxuICAgIG1hcmdpbjogNXB4O1xyXG4gICAgXHJcbiAgIFxyXG59XHJcblxyXG4ubG9naW4tZm9ybSB7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCBibGFjaztcclxuICAgIGJvcmRlci1yYWRpdXM6IDdweDtcclxuICAgIHdpZHRoOiBtYXgtY29udGVudDtcclxuICAgIHBhZGRpbmc6IDIwcHg7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbn1cclxuXHJcbi5sb2dpbi1ncm91cCB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIGFsaWduLWl0ZW1zOiBzdGFydDtcclxuICAgIGdhcDogMTBweDtcclxuICAgIG1hcmdpbi1ib3R0b206IDE1cHg7XHJcbn1cclxuXHJcbmxhYmVsIHtcclxuICAgIGZvbnQtZmFtaWx5OiAnUm9ib3RvJywgc2Fucy1zZXJpZjtcclxuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XHJcbiAgICBmb250LXNpemU6IDE0cHg7XHJcbn1cclxuXHJcbmJ1dHRvbiB7XHJcbiAgICBtYXJnaW4tdG9wOiAxNXB4O1xyXG4gICAgcGFkZGluZzogNXB4IDEwcHg7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQsICNGRjAwQ0MsICMzMzY2RkYpO1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcblxyXG4uZXJyb3Ige1xyXG4gICAgZm9udC1zaXplOiAxNHB4O1xyXG4gICAgY29sb3I6IHJlZDtcclxuICAgIG1hcmdpbi10b3A6IDVweDtcclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;;;;ICMvDC,6BAA2G;IACvGA,uCACJ;IAAAA,0BAAe;;;;;IAHjBA,8BAAgE;IAC9DA,uFAEe;IACnBA,iBAAM;;;;;IAHaA,eAA0F;IAA1FA,mOAA0F;;;;;IAQzGA,6BAA2G;IACvGA,uCACJ;IAAAA,0BAAe;;;;;IAHjBA,8BAAgE;IAC9DA,uFAEe;IACnBA,iBAAM;;;;;IAHaA,eAA0F;IAA1FA,mOAA0F;;;;;IAM/GA,4BAAiC;IAAAA,YAAW;IAAAA,iBAAI;;;;IAAfA,eAAW;IAAXA,oCAAW;;;ADVlD,OAAM,MAAOC,cAAc;EAIzBC,YAAoBC,EAAe,EAAUC,WAAwB,EAAUC,MAAc;IAAzE,OAAE,GAAFF,EAAE;IAAuB,gBAAW,GAAXC,WAAW;IAAuB,WAAM,GAANC,MAAM;IACnF,IAAI,CAACC,SAAS,GAAG,IAAI,CAACH,EAAE,CAACI,KAAK,CAAC;MAC7BC,QAAQ,EAAE,CAAC,EAAE,EAAET,UAAU,CAACU,QAAQ,CAAC;MACnCC,QAAQ,EAAE,CAAC,EAAE,EAAEX,UAAU,CAACU,QAAQ;KACnC,CAAC;EACJ;EAEAE,QAAQ,IACR;EAEAC,WAAW,CAACC,IAAe;IACzB,IAAIA,IAAI,CAACC,KAAK,EAAE;MACd,MAAM;QAAEN,QAAQ;QAAEE;MAAQ,CAAE,GAAGG,IAAI,CAACE,KAAK;MAGzC,IAAI,CAACX,WAAW,CAACY,KAAK,EAAE,CAACC,SAAS,CAAEC,QAAgB,IAAI;QACtD,MAAMC,IAAI,GAAGD,QAAQ,CAACE,IAAI,CAAED,IAAU,IAAI;UACxCE,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;UACjB,IAAIX,QAAQ,KAAKW,IAAI,CAACX,QAAQ,IAAIE,QAAQ,KAAKS,IAAI,CAACT,QAAQ,EAAE;YAE5D,IAAI,CAACL,MAAM,CAACkB,aAAa,CAAC,MAAM,CAAC;;QAErC,CAAC,CAAC;QACF,IAAI,CAACJ,IAAI,EAAE;UACT,IAAI,CAACb,SAAS,CAACkB,KAAK,EAAE;UACtB,IAAI,CAACC,OAAO,GAAG,gCAAgC;;MAEnD,CAAC,CAAC;KACH,MAAM;MACL,IAAI,CAACnB,SAAS,CAACoB,gBAAgB,EAAE;;EAErC;;AAnCWzB,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAA0B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCV3B/B,8BAAuB;MAC4BA;QAAA,OAAYgC,8BAAsB;MAAA,EAAC;MAChFhC,6BAAwB;MAAAA,wCAAS;MAAAA,iBAAK;MACtCA,8BAAyB;MACrBA,2BAAmF;MACnFA,+DAII;MACRA,iBAAM;MACNA,8BAAyB;MACrBA,2BAAuF;MACvFA,+DAII;MACRA,iBAAM;MACNA,kCAA2C;MAAAA,sBAAK;MAAAA,iBAAS;MACzDA,6DAAgD;MACpDA,iBAAO;;;MApBkBA,eAAuB;MAAvBA,yCAAuB;MAIpBA,eAA0C;MAA1CA,mEAA0C;MAQ1CA,eAA0C;MAA1CA,mEAA0C;MAOhDA,eAAa;MAAbA,kCAAa","names":["Validators","i0","LoginComponent","constructor","fb","userService","router","loginForm","group","username","required","password","ngOnInit","handleLogin","form","valid","value","login","subscribe","userList","user","find","console","log","navigateByUrl","reset","message","markAllAsTouched","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\hoain\\OneDrive\\Tài liệu\\GitHub\\QL_Nhan_Su\\src\\app\\login\\login.component.ts","C:\\Users\\hoain\\OneDrive\\Tài liệu\\GitHub\\QL_Nhan_Su\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { User } from '../model/user';\r\nimport { UserService } from 'src/app/service/user.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  message!: string;\r\n  loginForm!: FormGroup;\r\n\r\n  constructor(private fb: FormBuilder, private userService: UserService, private router: Router) {\r\n    this.loginForm = this.fb.group({\r\n      username: ['', Validators.required],\r\n      password: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  handleLogin(form: FormGroup) {\r\n    if (form.valid) {\r\n      const { username, password } = form.value;\r\n\r\n\r\n      this.userService.login().subscribe((userList: User[]) => {\r\n        const user = userList.find((user: User) => {\r\n          console.log(user);\r\n          if (username === user.username && password === user.password) {\r\n            \r\n            this.router.navigateByUrl('home');\r\n          }\r\n        })\r\n        if (!user) {\r\n          this.loginForm.reset();\r\n          this.message = 'Username or password incorrect';\r\n        }\r\n      })\r\n    } else {\r\n      this.loginForm.markAllAsTouched();\r\n    }\r\n  }\r\n}\r\n","\r\n<div class=\"container\">\r\n  <form class=\"login-form\" [formGroup]=\"loginForm\" (ngSubmit)=\"handleLogin(loginForm)\">\r\n      <h2 class=\"login-title\">Đăng nhập</h2>\r\n      <div class=\"login-group\">\r\n          <input type=\"text\" placeholder=\"Username\" name=\"email\" formControlName=\"username\"/>\r\n          <div class=\"error\" *ngIf=\"loginForm.touched || loginForm.dirty\">\r\n            <ng-container *ngIf=\"loginForm.get('username')?.errors && loginForm.get('username')?.errors?.['required']\">\r\n                Username is Mandatory\r\n            </ng-container>\r\n        </div>\r\n      </div>\r\n      <div class=\"login-group\">\r\n          <input  type=\"password\" placeholder=\"Password\" name=\"psw\" formControlName=\"password\" />\r\n          <div class=\"error\" *ngIf=\"loginForm.touched || loginForm.dirty\">\r\n            <ng-container *ngIf=\"loginForm.get('password')?.errors && loginForm.get('password')?.errors?.['required']\">\r\n                Password is Mandatory\r\n            </ng-container>\r\n        </div>\r\n      </div>\r\n      <button class=\"login-submit\" type=\"submit\">Login</button>\r\n      <p class=\"error\" *ngIf=\"message\">{{message}}</p>\r\n  </form>\r\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}